# Generated by Django 5.1.7 on 2025-03-24 13:55

from django.db import migrations, models


def create_initial_tv_shows(apps, schema_editor):
    TVShow = apps.get_model('tv_show', 'TVShow')
    Genre = apps.get_model('core', 'Genre')

    tv_shows = [
        {
            'title': 'Severance',
            'director': 'Dan Erickson',
            'start_year': 2022,
            'end_year': None,
            'seasons': 2,
            'episodes': 9,
            'description': 'Employees at Lumon Industries undergo a surgical procedure that splits their memories between work and personal lives.',
            'genres': ['Drama', 'Thriller', 'Science Fiction'],
            'poster': 'tv_posters/severance.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt12787780/',
            'trailer_link': 'https://www.youtube.com/watch?v=U9VRJc98xng'
        },
        {
            'title': 'Breaking Bad',
            'director': 'Vince Gilligan',
            'start_year': 2008,
            'end_year': 2013,
            'seasons': 5,
            'episodes': 62,
            'description': 'A high school chemistry teacher turns to manufacturing methamphetamine after being diagnosed with terminal cancer.',
            'genres': ['Crime', 'Drama', 'Thriller'],
            'poster': 'tv_posters/breaking_bad.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt0903747/',
            'trailer_link': 'https://www.youtube.com/watch?v=HhesaQXLuRY'
        },
        {
            'title': 'Game of Thrones',
            'director': 'David Benioff, D.B. Weiss',
            'start_year': 2011,
            'end_year': 2019,
            'seasons': 8,
            'episodes': 73,
            'description': 'Noble families battle for control of the Iron Throne in a world of dragons and political intrigue.',
            'genres': ['Drama', 'Fantasy', 'Adventure'],
            'poster': 'tv_posters/game_of_thrones.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt0944947/',
            'trailer_link': 'https://www.youtube.com/watch?v=rlR4PJej8JM'
        },
        {
            'title': 'Stranger Things',
            'director': 'The Duffer Brothers',
            'start_year': 2016,
            'end_year': None,
            'seasons': 4,
            'episodes': 34,
            'description': 'A group of kids in a small town uncover supernatural forces and secret government experiments.',
            'genres': ['Drama', 'Science Fiction', 'Horror'],
            'poster': 'tv_posters/stranger_things.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt4574334/',
            'trailer_link': 'https://www.youtube.com/watch?v=b9EkMc79ZSU'
        },
        {
            'title': 'The Office',
            'director': 'Greg Daniels',
            'start_year': 2005,
            'end_year': 2013,
            'seasons': 9,
            'episodes': 201,
            'description': 'A mockumentary that follows the everyday lives of office employees at Dunder Mifflin.',
            'genres': ['Comedy'],
            'poster': 'tv_posters/the_office.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt0386676/',
            'trailer_link': 'https://www.youtube.com/watch?v=WzmnfZunYk4'
        },
        {
            'title': 'Friends',
            'director': 'David Crane, Marta Kauffman',
            'start_year': 1994,
            'end_year': 2004,
            'seasons': 10,
            'episodes': 236,
            'description': 'Six friends navigate life and love in New York City.',
            'genres': ['Comedy', 'Romance'],
            'poster': 'tv_posters/friends.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt0108778/',
            'trailer_link': 'https://www.youtube.com/watch?v=ltmMJntSfQI'
        },
        {
            'title': 'The Mandalorian',
            'director': 'Jon Favreau',
            'start_year': 2019,
            'end_year': None,
            'seasons': 3,
            'episodes': 24,
            'description': 'A lone bounty hunter travels through the outer reaches of the galaxy, far from the authority of the New Republic.',
            'genres': ['Action', 'Adventure', 'Science Fiction'],
            'poster': 'tv_posters/the_mandalorian.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt8111088/',
            'trailer_link': 'https://www.youtube.com/watch?v=aOC8E8z_rJc'
        },
        {
            'title': 'The Crown',
            'director': 'Peter Morgan',
            'start_year': 2016,
            'end_year': None,
            'seasons': 4,
            'episodes': 40,
            'description': 'A dramatized history of Queen Elizabeth II’s reign and the events that shaped the second half of the 20th century.',
            'genres': ['Drama', 'History'],
            'poster': 'tv_posters/the_crown.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt4786824/',
            'trailer_link': 'https://www.youtube.com/watch?v=vwkjjnqD9Jw'
        },
        {
            'title': 'Westworld',
            'director': 'Jonathan Nolan, Lisa Joy',
            'start_year': 2016,
            'end_year': None,
            'seasons': 3,
            'episodes': 28,
            'description': 'A dark odyssey about the dawn of artificial consciousness in a reimagined Western theme park.',
            'genres': ['Drama', 'Science Fiction', 'Western'],
            'poster': 'tv_posters/westworld.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt0475784/',
            'trailer_link': 'https://www.youtube.com/watch?v=pAwR6w2TBA4'
        },
        {
            'title': 'Black Mirror',
            'director': 'Charlie Brooker',
            'start_year': 2011,
            'end_year': None,
            'seasons': 5,
            'episodes': 22,
            'description': 'An anthology series that explores twisted, high-tech multiverses where humanity’s greatest innovations collide with its darkest instincts.',
            'genres': ['Drama', 'Science Fiction', 'Thriller'],
            'poster': 'tv_posters/black_mirror.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt2085059/',
            'trailer_link': 'https://www.youtube.com/watch?v=2a0KaYmW7wc'
        },
        {
            'title': 'Sherlock',
            'director': 'Steven Moffat, Mark Gatiss',
            'start_year': 2010,
            'end_year': 2017,
            'seasons': 4,
            'episodes': 13,
            'description': 'A modern update finds the famous sleuth solving mysteries in 21st century London.',
            'genres': ['Crime', 'Drama', 'Mystery'],
            'poster': 'tv_posters/sherlock.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt1475582/',
            'trailer_link': 'https://www.youtube.com/watch?v=IrBKwzL3K7s'
        },
        {
            'title': 'House of Cards',
            'director': 'Beau Willimon',
            'start_year': 2013,
            'end_year': 2018,
            'seasons': 6,
            'episodes': 73,
            'description': 'A ruthless politician and his equally ambitious wife stop at nothing to conquer Washington, D.C.',
            'genres': ['Drama', 'Political'],
            'poster': 'tv_posters/house_of_cards.jpg',
            'imdb_link': 'https://www.imdb.com/title/tt1856010/',
            'trailer_link': 'https://www.youtube.com/watch?v=bjZjbjbN5ng0'
        }
    ]

    for data in tv_shows:
        poster_path = data.pop('poster', None)
        genres = data.pop('genres')
        tv_show = TVShow.objects.create(
            **data,
            poster=poster_path
        )
        for genre_name in genres:
            genre = Genre.objects.get(name=genre_name)
            tv_show.genres.add(genre)


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TVShow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('director', models.CharField(max_length=100)),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField(blank=True, null=True)),
                ('seasons', models.PositiveIntegerField()),
                ('episodes', models.PositiveIntegerField()),
                ('description', models.TextField(blank=True)),
                ('poster', models.ImageField(upload_to='tv_posters/')),
                ('imdb_link', models.URLField(blank=True)),
                ('trailer_link', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('genres', models.ManyToManyField(to='core.genre')),
            ],
        ),
        migrations.RunPython(create_initial_tv_shows)
    ]
